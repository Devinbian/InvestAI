import { ref } from "vue";
import { ElMessage } from "element-plus";

export function useVoiceInput() {
  // ËØ≠Èü≥Áõ∏ÂÖ≥Áä∂ÊÄÅ
  const isRecording = ref(false);
  const recognition = ref(null);
  const voiceTimer = ref(null);
  const recordingDuration = ref(0);
  const wxVoiceLocalId = ref("");
  const isWxVoiceSupported = ref(false);
  const isWechatEnv = ref(false);

  // Ê£ÄÊµãÊòØÂê¶‰∏∫ÂæÆ‰ø°ÂÜÖÁΩÆÊµèËßàÂô®
  const isWechatBrowser = () => {
    const ua = navigator.userAgent.toLowerCase();
    return ua.includes("micromessenger");
  };

  // ÂàùÂßãÂåñÂæÆ‰ø°JS-SDKËØ≠Èü≥ÂäüËÉΩ
  const initWechatVoice = () => {
    if (isWechatBrowser() && typeof wx !== "undefined") {
      try {
        wx.checkJsApi({
          jsApiList: ["startRecord", "stopRecord", "translateVoice"],
          success: function (res) {
            if (
              res.checkResult.startRecord &&
              res.checkResult.stopRecord &&
              res.checkResult.translateVoice
            ) {
              isWxVoiceSupported.value = true;
              console.log("ÂæÆ‰ø°ËØ≠Èü≥ËØÜÂà´ÂäüËÉΩÂèØÁî®");
            }
          },
        });
      } catch (error) {
        console.log("ÂæÆ‰ø°JS-SDKÊú™ÈÖçÁΩÆÊàñ‰∏çÂèØÁî®");
      }
    }
  };

  // ÂºÄÂßãÂΩïÈü≥ËÆ°Êó∂
  const startRecordingTimer = () => {
    recordingDuration.value = 0;
    voiceTimer.value = setInterval(() => {
      recordingDuration.value++;

      // 15ÁßíÊó∂ÊèêÁ§∫Áî®Êà∑
      if (recordingDuration.value === 15) {
        ElMessage.info("üí° ÁªßÁª≠ËØ¥ËØùÔºåÊàñÁÇπÂáªÈ∫¶ÂÖãÈ£éÊåâÈíÆÁªìÊùüÂΩïÈü≥");
      }

      // 45ÁßíÊó∂Ë≠¶ÂëäÁî®Êà∑Âç≥Â∞ÜÂÅúÊ≠¢
      if (recordingDuration.value === 45) {
        ElMessage.warning("‚è∞ ÂΩïÈü≥Âç≥Â∞ÜÁªìÊùüÔºåËøòÊúâ15Áßí");
      }

      // ÊúÄÈïøÂΩïÈü≥60Áßí
      if (recordingDuration.value >= 60) {
        ElMessage.info("‚è±Ô∏è ÂΩïÈü≥Êó∂Èó¥Â∑≤Ëææ‰∏äÈôêÔºåËá™Âä®ÂÅúÊ≠¢");
        stopVoiceRecording();
      }
    }, 1000);
  };

  // ÂÅúÊ≠¢ÂΩïÈü≥
  const stopRecording = () => {
    isRecording.value = false;
    if (voiceTimer.value) {
      clearInterval(voiceTimer.value);
      voiceTimer.value = null;
    }
    recordingDuration.value = 0;
  };

  // ÂæÆ‰ø°ÂºÄÂßãÂΩïÈü≥
  const startWechatVoiceRecord = () => {
    if (!isWxVoiceSupported.value) {
      ElMessage.error("ÂæÆ‰ø°ËØ≠Èü≥ÂäüËÉΩ‰∏çÂèØÁî®ÔºåËØ∑Á°Æ‰øùÂú®ÂæÆ‰ø°‰∏≠ÊâìÂºÄÂπ∂ÈÖçÁΩÆ‰∫ÜJS-SDK");
      return;
    }

    wx.startRecord({
      success: function () {
        isRecording.value = true;
        startRecordingTimer();
        ElMessage.success("üé§ ÂºÄÂßãÂæÆ‰ø°ËØ≠Èü≥ËæìÂÖ•ÔºåËØ∑ËØ¥ËØù...");
      },
      cancel: function () {
        ElMessage.info("Áî®Êà∑ÂèñÊ∂àÂΩïÈü≥");
        stopRecording();
      },
    });
  };

  // ÂæÆ‰ø°ÂÅúÊ≠¢ÂΩïÈü≥Âπ∂ËØÜÂà´
  const stopWechatVoiceRecord = (inputMessage) => {
    if (!isWxVoiceSupported.value) return;

    wx.stopRecord({
      success: function (res) {
        wxVoiceLocalId.value = res.localId;

        // ËØÜÂà´ËØ≠Èü≥
        wx.translateVoice({
          localId: wxVoiceLocalId.value,
          isShowProgressTips: 1,
          success: function (res) {
            const result = res.translateResult;
            if (result && result.trim()) {
              // Êõ¥Êñ∞ËæìÂÖ•Ê°ÜÂÜÖÂÆπ
              const currentValue = inputMessage.value.trim();
              if (currentValue) {
                inputMessage.value = currentValue + " " + result.trim();
              } else {
                inputMessage.value = result.trim();
              }
              ElMessage.success(
                `ËØ≠Èü≥ËØÜÂà´ÂÆåÊàê: "${result.substring(0, 20)}${result.length > 20 ? "..." : ""}"`,
              );
            } else {
              ElMessage.warning("Êú™ËØÜÂà´Âà∞ËØ≠Èü≥ÂÜÖÂÆπÔºåËØ∑ÈáçËØï");
            }
            stopRecording();
          },
          fail: function (res) {
            ElMessage.error("ËØ≠Èü≥ËØÜÂà´Â§±Ë¥•ÔºåËØ∑ÈáçËØï");
            stopRecording();
          },
        });
      },
      fail: function (res) {
        ElMessage.error("ÂΩïÈü≥Â§±Ë¥•ÔºåËØ∑ÈáçËØï");
        stopRecording();
      },
    });
  };

  // ÂàùÂßãÂåñËØ≠Èü≥ËØÜÂà´
  const initSpeechRecognition = (inputMessage) => {
    // ÂæÆ‰ø°ÂÜÖÁΩÆÊµèËßàÂô®‰∏çÊîØÊåÅËØ≠Èü≥ËØÜÂà´
    if (isWechatBrowser()) {
      console.log("ÂæÆ‰ø°ÂÜÖÁΩÆÊµèËßàÂô®‰∏çÊîØÊåÅËØ≠Èü≥ËØÜÂà´");
      return false;
    }

    if ("webkitSpeechRecognition" in window || "SpeechRecognition" in window) {
      try {
        const SpeechRecognition =
          window.SpeechRecognition || window.webkitSpeechRecognition;
        recognition.value = new SpeechRecognition();

        // ÈÖçÁΩÆËØ≠Èü≥ËØÜÂà´ÂèÇÊï∞
        recognition.value.continuous = true;
        recognition.value.interimResults = true;
        recognition.value.lang = "zh-CN";
        recognition.value.maxAlternatives = 1;

        // ËØÜÂà´ÁªìÊûúÂ§ÑÁêÜ
        recognition.value.onresult = (event) => {
          let finalTranscript = "";

          for (let i = event.resultIndex; i < event.results.length; i++) {
            const transcript = event.results[i][0].transcript;
            if (event.results[i].isFinal) {
              finalTranscript += transcript;
            }
          }

          // Êõ¥Êñ∞ËæìÂÖ•Ê°ÜÂÜÖÂÆπ
          if (finalTranscript) {
            const cleanedText = finalTranscript.trim();
            const currentValue = inputMessage.value.trim();
            if (currentValue) {
              inputMessage.value = currentValue + " " + cleanedText;
            } else {
              inputMessage.value = cleanedText;
            }
          }
        };

        // ËØÜÂà´ÂºÄÂßã
        recognition.value.onstart = () => {
          console.log("ËØ≠Èü≥ËØÜÂà´ÂºÄÂßã");
          startRecordingTimer();
        };

        // ËØÜÂà´ÁªìÊùü
        recognition.value.onend = () => {
          console.log("ËØ≠Èü≥ËØÜÂà´ÁªìÊùü");
          stopRecording();
        };

        // ËØÜÂà´ÈîôËØØÂ§ÑÁêÜ
        recognition.value.onerror = (event) => {
          console.error("ËØ≠Èü≥ËØÜÂà´ÈîôËØØ:", event.error);
          let errorMessage = "ËØ≠Èü≥ËØÜÂà´Â§±Ë¥•";

          switch (event.error) {
            case "no-speech":
              errorMessage = "Êú™Ê£ÄÊµãÂà∞ËØ≠Èü≥ÔºåËØ∑ÈáçÊñ∞Â∞ùËØï";
              break;
            case "audio-capture":
              errorMessage = "Êó†Ê≥ïËÆøÈóÆÈ∫¶ÂÖãÈ£éÔºåËØ∑Ê£ÄÊü•ÊùÉÈôêËÆæÁΩÆ";
              break;
            case "not-allowed":
              errorMessage = "È∫¶ÂÖãÈ£éÊùÉÈôêË¢´ÊãíÁªùÔºåËØ∑Âú®ÊµèËßàÂô®ËÆæÁΩÆ‰∏≠ÂÖÅËÆ∏È∫¶ÂÖãÈ£éËÆøÈóÆ";
              break;
            case "network":
              errorMessage = "ÁΩëÁªúËøûÊé•ÂºÇÂ∏∏ÔºåËØ∑Ê£ÄÊü•ÁΩëÁªúÂêéÈáçËØï";
              break;
            case "language-not-supported":
              errorMessage = "‰∏çÊîØÊåÅ‰∏≠ÊñáËØ≠Èü≥ËØÜÂà´";
              break;
          }

          ElMessage.error(errorMessage);
          stopRecording();
        };

        return true;
      } catch (error) {
        console.error("ÂàùÂßãÂåñËØ≠Èü≥ËØÜÂà´Â§±Ë¥•:", error);
        return false;
      }
    }
    return false;
  };

  // ÂºÄÂßãËØ≠Èü≥ÂΩïÈü≥
  const startVoiceRecording = () => {
    // ÂæÆ‰ø°ÊµèËßàÂô®‰ºòÂÖà‰ΩøÁî®ÂæÆ‰ø°ËØ≠Èü≥ÂäüËÉΩ
    if (isWechatBrowser()) {
      if (isWxVoiceSupported.value) {
        startWechatVoiceRecord();
      } else {
        console.log("ÂæÆ‰ø°ÁéØÂ¢ÉÔºöËØ≠Èü≥ÂäüËÉΩÈúÄË¶ÅJS-SDKÈÖçÁΩÆ");
      }
      return;
    }

    if (!recognition.value) {
      ElMessage.error("ÊÇ®ÁöÑÊµèËßàÂô®‰∏çÊîØÊåÅËØ≠Èü≥ËØÜÂà´ÂäüËÉΩÔºåÂª∫ËÆÆ‰ΩøÁî®ChromeÊµèËßàÂô®");
      return;
    }

    try {
      isRecording.value = true;
      recognition.value.start();
      ElMessage.success("üé§ ÂºÄÂßãËØ≠Èü≥ËæìÂÖ•ÔºåËØ∑ËØ¥ËØù...");
    } catch (error) {
      console.error("ÂêØÂä®ËØ≠Èü≥ËØÜÂà´Â§±Ë¥•:", error);
      ElMessage.error("ÂêØÂä®ËØ≠Èü≥ËØÜÂà´Â§±Ë¥•ÔºåËØ∑ÈáçËØï");
      stopRecording();
    }
  };

  // ÂÅúÊ≠¢ËØ≠Èü≥ÂΩïÈü≥
  const stopVoiceRecording = (inputMessage) => {
    // ÂæÆ‰ø°ÊµèËßàÂô®‰ΩøÁî®ÂæÆ‰ø°ËØ≠Èü≥ÂäüËÉΩ
    if (isWechatBrowser() && isWxVoiceSupported.value) {
      stopWechatVoiceRecord(inputMessage);
      return;
    }

    if (recognition.value && isRecording.value) {
      recognition.value.stop();
    }
    stopRecording();
  };

  // ËØ≠Èü≥ÁÇπÂáªÂ§ÑÁêÜ
  const onVoiceClick = (inputMessage) => {
    console.log("ËØ≠Èü≥ÊåâÈíÆÁÇπÂáª");

    // ÂæÆ‰ø°ÁéØÂ¢ÉÁâπÊÆäÂ§ÑÁêÜ
    if (isWechatBrowser()) {
      ElMessage({
        message: "üí¨ ÂæÆ‰ø°ËØ≠Èü≥ÂäüËÉΩÈúÄË¶ÅJS-SDKÈÖçÁΩÆÔºåÂΩìÂâçÊöÇ‰∏çÂèØÁî®",
        type: "warning",
        duration: 4000,
        showClose: true,
        dangerouslyUseHTMLString: false,
      });
      return;
    }

    if (isRecording.value) {
      stopVoiceRecording(inputMessage);
      ElMessage.info("üõë ËØ≠Èü≥ËæìÂÖ•Â∑≤ÂÅúÊ≠¢");
    } else {
      startVoiceRecording();
    }
  };

  // ÂàùÂßãÂåñËØ≠Èü≥ÂäüËÉΩ
  const initVoice = (inputMessage) => {
    isWechatEnv.value = isWechatBrowser();
    if (isWechatEnv.value) {
      initWechatVoice();
    } else {
      initSpeechRecognition(inputMessage);
    }
  };

  // Ê∏ÖÁêÜËØ≠Èü≥ËµÑÊ∫ê
  const cleanupVoice = () => {
    if (recognition.value && isRecording.value) {
      recognition.value.stop();
    }
    if (voiceTimer.value) {
      clearInterval(voiceTimer.value);
    }
    stopRecording();
  };

  return {
    // Áä∂ÊÄÅ
    isRecording,
    recordingDuration,
    isWechatEnv,

    // ÊñπÊ≥ï
    onVoiceClick,
    initVoice,
    cleanupVoice,
    startVoiceRecording,
    stopVoiceRecording,
  };
}
